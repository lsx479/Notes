构造函数的一项重要功能是对成员变量进行初始化
1、面向过程、面向对象、泛型编程
2、根据类名创建对象，叫做类的实例化
3、cin表示标准输入、cout表示标准输出、cerr表示标准错误，如果需要使用输入输出时，则需要包含头文件iostream。
   endl表示换行，与C语言里的\n作用相同
4、C++ 新增了bool类型，它一般占用 1 个字节长度。bool 类型只有两个取值，true 和 false：true 表示“真”，false 表示“假”
5、内敛函数，要在函数定义处添加 inline 关键字，在函数声明处添加 inline 关键字虽然没有错，但这种做法是无效的，编译器会忽略函数声明处的 inline 关键字

6、函数的重载的规则：
函数名称必须相同。+参数列表必须不同（个数不同、类型不同、参数排列顺序不同等）。
函数的返回类型可以相同也可以不相同。
仅仅返回类型不同不足以成为函数的重载


7.类的声明   类的定义  
8.类中成员变量的属性,private,public,protected
  可以通过成员函数访问私有变量
9.构造函数:类必须包含构造函数,不写的话编译器自动生成,构造函数可以重载,但是必须被调用,构造函数的一项重要功能是对成员变量进行初始化.

10.构造函数的参数初始化表,参数初始化表还有一个很重要的作用，那就是初始化 const 成员变量。初始化 const 成员变量的唯一方法就是使用参数初始化表

11、构造函数的名字和类名相同，而析构函数的名字是在类名前面加一个~符号，析构函数没有参数，不能被重载，因此一个类只能有一个析构函数。如果用户没有定义，编译器会自动生成一个默认的析构函数
12、C++ 中的 new 和 delete 分别用来分配和释放内存，它们与C语言中 malloc()、free() 最大的一个不同之处在于：用 new 分配内存时会调用构造函数，用 delete 释放内存时会调用析构函数。构造函数和析构函数对于类来说是不可或缺的，所以在C++中我们非常鼓励使用 new 和 delete

13、this 是 C++ 中的一个关键字，也是一个 const 指针，它指向当前对象，通过它可以访问当前对象的所有成员
    this 只能用在类的内部，通过 this 可以访问类的所有成员，包括 private、protected、public 属性的。this 是一个指针，要用->来访问成      员变量或成员函数。

  几点注意：
  this 是 const 指针，它的值是不能被修改的，一切企图修改该指针的操作，如赋值、递增、递减等都是不允许的。
  this 只能在成员函数内部使用，用在其他地方没有意义，也是非法的。
  只有当对象被创建后 this 才有意义，因此不能在 static 成员函数中使用。
  编译器在编译一个普通成员函数时，会隐式地增加一个形参 this，并把当前对象的地址赋值给 this，所以普通成员函数只能在创建对象后通过对象  来调用，因为它需要当前对象的地址。

14、static 成员变量属于类，不属于某个具体的对象，即使创建多个对象，也只为这个变量分配一份内存，所有对象使用的都是这份内存中的数据。     当某个对象修改了变量，也会影响到其他对象。
  static 成员变量必须在类声明的外部初始化：type class::name = value;
  static 成员变量的内存既不是在声明类时分配，也不是在创建对象时分配，而是在（类外）初始化时分配。反过来说，没有在类外初始化的 static   成员变量不能使用。
  static 成员变量不占用对象的内存，而是在所有对象之外开辟内存，即使不创建对象也可以访问

  几点注意：
  1) 一个类中可以有一个或多个静态成员变量，所有的对象都共享这些静态成员变量，都可以引用它。
  2) static 成员变量和普通 static 变量一样，都在内存分区中的全局数据区分配内存，到程序结束时才释放。这就意味着，static 成员变量不随     对象的创建而分配内存，也不随对象的销毁而释放内存。而普通成员变量在对象创建时分配内存，在对象销毁时释放内存。
  3) 静态成员变量必须初始化，而且只能在类体外进行。

  4) 静态成员变量既可以通过对象名访问，也可以通过类名访问，但要遵循 private、protected 和 public 关键字的访问权限限制。当通过对象名     访问时，对于不同的对象，访问的是同一份内存。

15、在类中，static 除了可以声明静态成员变量，还可以声明静态成员函数。普通成员函数可以访问所有成员（包括成员变量和成员函数），静态成员    函数只能访问静态成员。
  
   静态成员函数与普通成员函数的根本区别在于：普通成员函数有 this 指针，可以访问类中的任意成员；而静态成员函数没有 this 指针，只能访   问静态成员（包括静态成员变量和静态成员函数）。


16、const 可以用来修饰成员变量、成员函数以及对象。
    const 成员变量的用法和普通 const 变量的用法相似，只需要在声明时加上 const 关键字。初始化 const 成员变量只有一种方法，就是通过参      数初始化表
  