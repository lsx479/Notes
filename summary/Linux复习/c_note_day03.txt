【1】变量

     1---变量的概念

	C语言的变量在程序中用变量名表示。变量名由用户根据其用途任意命名，变量名命名遵从标识符的起名规则(只能由字母\数字\下划线组成且头一个字母只能是字母或下划线. 变量不能是C的特殊字符)。 
	在程序运行时，变量占据一定大小的存储空间，其大小由其数据类型来决定的,作为某变量的内存空间的首地址，称为变量的地址。


     2---变量的初始化和赋值
	
	变量初始化的一般形式如下：<存储类型>   <数据类型>   <变量> = <表达式> 
        	

        变量的初始化是指变量在被说明的同时赋给一个初值

		比如：int a = 5;  //定义一个int型变量a,并初始化为5
                         a = 6;   //将a再次赋值为6
                      int a, b;   //声明了两个int型变量a和b
                      int a = 5, b;//声明了两个int型变量a和b,a初始化为5



      3---局部变量和全局变量
          局部变量：定义在某个函数内部的变量，称为局部变量

		1，只在所声明的函数内部有效
                2，当所在的函数结束后，这个变量也会被释放
                3，局部变量必须赋值后才能参与运算
                4，如果没有对一个局部变量赋值，那么他的值将会是一个随机数

          全局变量：定义在所有函数外部的变量，称为全局变量
		1，全局变量在整个工程中都有效
                2，全局变量在程序结束后被释放
                3，全局变量如果没有赋初值，会有默认初始化值



      4---变量的存储类型
          C语言支持四种存储类型：auto, register, static和extern。
          1）auto
             用auto存储类型说明的变量都是局部于某个程序范围内的，只能在某个程序范围内使用，通常在函数体内或函数中的复合语句里。
	     C语言中,在函数体的某程序段内说明auto存储类型的变量时可以省略关键字auto。
          例如，在函数体中，下列三条语句说明了三个auto存储类型的变量：   
		auto int  k ;     //说明一个auto整型的k变量  
		int  j ;     	 //省略了auto，说明一个auto整型的j变量   
		double x;      //省略了auto，说明一个auto双精度型的变量

	   2)register
             register称为寄存器型，使用register关键词说明的变量主要目的是想将所说明的变量放入CPU的寄存器存储空间中，这样可以加快程序的运行速度
	     如申请不到就使用一般内存，同auto ;
	     register 存储类型说明变量的方式如以下例子所示：    
	     register int  count;       说明一个存储类型为register的整数变量；
	     测试一个程序的执行时间：time ./a.out


	   3)extern 
             extern称为外部参照引用型，使用extern说明的变量是想引用在其它文件中函数体外部说明的变量。
             当变量在一个文件中的函数体外说明，所有其他文件中的函数或程序段都可引用这个变量。
             一般用于在函数之间传递数据。
             编译的时候一定要一块编译：gcc extern1.c extern2.c



           4)static
             static称为静态存储类型，在C语言中，既可以在函数体内，也可在函数体外说明static 存储类型的变量
             在函数体内说明的static 存储类型的变量也是一种局部变量,与auto最大不同点是:
		(1)static存储类型的变量在内存中是以固定地址存放的，而不是以堆栈方式存放的，有默认值0
		(2)只要整个程序还在继续运行静态变量就不会随着说明它的程序段的结束而消失
                (3)次再调用该函数，该存储类型的变量不再重新说明，而且还保留上次调用存入的数值

             如果static修饰的是全局变量，那么这个全局变量将不可以被其他文件所引用

      5---强制类型转换

          强制类型转换符后面的表达式如存在复杂运算，就一定要用小括号括起来
	  强制类型转换符是一种不安全的转换，一般都是将高级类型转换成低级类型，要丢失数据的精度；
	  强制类型转换并不改变表达式中变量的数据类型和其值。


【2】运算符
     1---算术运算符
         C提供的算术运算符:+，-，*，/，%，++，--。

         %运算针对于整型数据有效
         常量不可以进行自增自减运算  5++；错误
         
     2---关系运算   最后的结果是一个逻辑类型的值
         > , >= , < , <=, ==, !=
         ==   判断运算符左右两边的值是否相等
          

     3---逻辑运算
         &&    ||   ！
         &&：一假即假
         ||：一真即真
         
         短路原则：如果&&或者||运算符后面的表达式不会影响整个表达式的结果，则后面的表达式不参与运算
                   否则，后面的表达式将正常参与运算
 
     4---位运算
         ~位取反， | 位或， &位与， ^位异或，   >>位右移，  << 位左移
          位运算是对二进制位（计算机存储的）进行相应的运算
          
          a >> b    =>   a/2^b
          a << b    =>   a*2^b

          异或运算：相同为0，不同为1
     
          a ^ b ^ b = a   一个数异或同一个数两次，得到的是该数本身


         练习：1，将两个数的值进行交换（至少使用两种方式）
               2，一个三位数，求每一位上的数相加后的结果 



     5---赋值运算符与赋值复合运算符

         赋值运算：=,从右往左进行运算
         int a, b, c;
         a = b = c = 5;

         赋值复合运算符：+=, -=, *=, /=, %=, &=, |=, ^=.........
         a += b;  =>   a=a+b;
         a *= b;  =>   a=a*b
         ...
         a ^= b   =>   a=a^b   


      6---逗号运算符
          从左到右依次计算，最后表达式的值，作为整个表达式的值。
          整个表达式的值就是最后一个表达式的值但是前边所有的表达式都会被计算。

          例如，
                float  x=10.5,  y=1.8,  z=0; z = (x+=5, y = x+0.2) ;      z 赋值为15.7， x赋值为15.5, y赋值为15.7 
                z = (x=y=5, x +=1) ;       z 赋值为6， x赋值为6,  y赋值为5  
                z = (x=5, y = 6, x+y ) ;      z 赋值为11， x赋值为5,  y赋值为6 
                z = (z=8, x=5, y = 3) ;      z 赋值为3， x赋值为5, y赋值为3
   

      7---条件运算符
          表达式1？表达式2：表达式3；

          先计算表达式1的结果，如果1为真，则最后的结果就是表达式2的值，如果1为假，则最后的结果就是表达式3的值
          比如说   
                 int a = 5, b = 6;
                 a > b ? a++ : b++;


      8---sizeof
          计算某一种数据类型或者某一个变量在内存中的所占的字节数
          是一个关键字，计算一个变量或者数据类型所占的内存空间的大小，以字节为单位。
          注意：它只针对数据类型，而不针对变量！   

【3】输入输出函数
     1---字符输出函数
         	格式: putchar( c )
                参数: c为字符常量、变量或表达式
                功能：把字符c输出到显示器上
                返值：正常，为显示的代码值

     2---字符输入函数
		格式:getchar( )
                功能：从键盘读一字符
                返值：正常，返回读取的代码值；出错,返回EOF(-1)

         练习：从终端读取一个字符，如果是大写字母则按小写字母输出，如果是小写字母，则按照大写字母输出