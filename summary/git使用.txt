Git是分布式版本控制系统,基本使用命令如下
1、git init    本地创建一个版本库
2、git config --global user.name "liushixiong"    添加用户名<不添加后面可能无法提交>
3、git config --global user.email "liusx@i2value.com"  添加邮箱<不添加后面可能无法提交>
4、ssh-keygen -t rsa -C "liusx@i2value.com"         ssh生成公钥， /c/Cadence/SPB_Data/.ssh/id_rsa.pub   公钥给服务器端
5、git clone git@10.10.8.202:/home/git/YSRD.git     从服务器端克隆项目到本地  
6、git add *    添加到版本库
7、git commit -m "注释"    提交到版本库
8、git log   查看提交的版本记录
9、git diff  查看修改
10、git status 查看当前状态
11、git reset --hard 893we     回退到某一个版本
12、git checkout -b dev        创建一个dev分支 
13、git branch -d dev          删除一个分支
14、git branch 查看分支
15、git checkout dev      切换分支
16、git merge dev         合并dev分支
17、git pull   从服务器update
18、git push origin master  如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 
19、git branch -r   查看远程分支名
20、git reset --merge   退出合并
21、git push origin --delete  dev  删除远程分支
22、git rebase -i  ed2sd      删除已提交的记录节点,先找到要删除记录的前一个节点
	将pull  改为drop          保存提交
	如果冲突  git rebase --skip   
	git rebase --continue      { git add *  修改完冲突)
23、在开发过程中，因服务器master的版本库发生修改，造成本地master push失败，解决方法：
	1、在本地master版本下拉一个新的dev分支
	2、将本地master分支回退到之前从服务器pull下的版本
	3、git pull 从服务器update本地master
	4、git merge dev  再合并dev分支
	5、git push origin master   再次push
	

